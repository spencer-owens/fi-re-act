rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update, delete: if isAdmin() || request.auth.uid == userId;
    }

    // Channels collection
    match /channels/{channelId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Messages collection
    match /messages/{messageId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin() || request.auth.uid == resource.data.userId;
    }

    // Conversations collection
    match /conversations/{conversationId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // For seeding data, temporarily allow all writes from admin user
    // Replace YOUR_ADMIN_UID with your admin user's UID
    match /{document=**} {
      allow read, write: if request.auth.uid == 'YOUR_ADMIN_UID';
    }
  }
} 